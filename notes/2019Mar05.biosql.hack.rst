rename biosql tables with one script
===========================================

Import biosql to mysql
===========================================
mysqladmin -uroot -ppassword create biosql
mysql -uroot -ppassword -ve "CREATE USER 'biosql_user'@'localhost' IDENTIFIED BY 'password'"
mysql -uroot -ppassword -ve "GRANT ALL PRIVILEGES ON biosql.* TO 'biosql_user'@'localhost' IDENTIFIED BY 'password'"
mysql -uroot -ppassword -ve "GRANT ALL PRIVILEGES ON cbioportal.* TO 'cbio_user'@'localhost' IDENTIFIED BY 'password'"
mysql -uroot -ppassword -ve "FLUSH PRIVILEGES"
mysql -ubiosql_user -ppassword biosql < biosqldb-mysql.sql

Populate biosql with NCBI taxonomy
===========================================
[mac] brew install openssl mysql-connector-c
cpan install DBD::mysql
git clone https://github.com/chaelir/biosql.git
patch load_ncbi_taxonomy.pl
load_ncbi_taxonomy.pl --download --driver mysql --dbname biosql --dbuser biosql_user --dbpass password

Rename tables in biosql.* by biosql.BS_*
===========================================
mysql -ubiosql_user -ppassword -AN -e"select concat('alter table ', db, '.', tb, ' rename ', db, '.', prfx, tb,';') from (select table_schema db,table_name tb from information_schema.tables where table_schema='biosql') A,(SELECT 'BS_' prfx) B" | mysql -ubiosql_user -ppassword -AN

Export BS_* to an importable file
===========================================
mysqldump -ubiosql_user -ppassword biosql > BS_tables_export.sql

Import BS_* to cbioportal 
===========================================
mysql -ucbio_user -ppassword cbioportal < BS_tables_export.sql


Connecting cBioPortal to BioSeq
===========================================
1. Create IM_microbe_profile like genetic_profile:
         genetic_profile_id -> microbe_profile_id, 
         genetic_alteration_type -> microbe_alteration_type, 
         stable_id, 
         cancer_study_id, 
         data_type, 
         name, 
         description
2. Create IM_microbe_alteration like genetic_alteration:
         genetic_profile_id -> microbe_profile_id
         genetic_entity_id -> microbe_entity_id 
3. Create IM_microbe_entity like genetic_entity:
         ID(microbe_entity_id) -> MICROBE (i.e. BS_taxon.taxon_id)
5. Create IM_microbe like gene
				 Entrez_gene_id -> ncbi_taxon_id (i.e. BS_taxon.ncbi_taxon_id)
				 Hugo_gene_symbol -> ncbi_taxon_name (i.e. BS_taxon_name.name)
         genetic_entity_id -> microbe_entity_id (i.e. BS_taxon.taxon_id)
         cytoband -> taxon_level (i.e. BS_taxon.node_rank)
         type,
         length,
3. Create IM_microbe_entity like genetic_entity:
         ID(cell_entity_id) -> CELL
4. Create IM_cell_alteration like genetic_alteration:
         genetic_profile_id -> cell_profile_id
         genetic_entity_id -> cell_entity_id 
5. Create IM_cell_profile like genetic_profile:
         genetic_profile_id -> cell_profile_id, 
         genetic_alteration_type -> cell_alteration_type, 
         stable_id, 
         cancer_study_id, 
         data_type, 
         name, 
         description
6. Prepare an importable set of microbiome and immune cell data (CRC data)
7. Create import code （core/src/main/scripts/importer/cbioportal_common.py）to populate those tables
Modify: front end code to display these tables
